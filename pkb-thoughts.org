* difference between root and modified-key?

* add meaning of char-table, as holding certain character codes, somewhere

* why is translate-events-list optional in pkb-translate-events?

* more explicit definition of what kind of things belong in options lists

* pkb-translate-events
** pkb-translate-events copy bk-options; e.g. if BKS-W-BINDS has an element (55 opts . (nil bind)) and this event is translated to next, opts is not copied. Is this how the function should behave?
** when event is copied, it appears there is no space left for MK-OPTIONS in BINDS-CHAR-TABLE, e.g. if we copy '(55 nil ((nil bind . opt)))' to 12, then 12 will just be '(bind . opt)', not '(nil bind . opt)', as one would expect. Although, there is a 1-1 correspondence here between the bind and the key. perhaps it is OK in the sense that one can put any desired options in BIND-OPTIONS? * I believe I have fixed this?
** should there be an option for copying MK-OPTIONS? Should it be only a general option in pkb-translate-events or should it be specifiable by MK?

* is it, in fact, the case that we don't leave space for MK-OPTIONS when putting entries a BINDS-CHAR-TABLE? (I believe I have fixed this in pkb-translate-events)

* somewhere or another try to explain how emacs stores keys

* things to documents
+ use of symbol-function
+ explain ESC-prefix keymap
+ explain how ESC's are remapped?

* add garbage collection?

* in useful commands, in "what keys are included?", do I treat escapes properly? In particular, should I manually be checking for escapes so that <M-escape> is included?

* when testing pkb-include-mk-p, pkb-include-base-key-list, should I use translated or untranslated events?
* enable Super modifier, at least on Macs.
* can we make a function that finds (or tries to find) in which keymap a binding is defined?
* note that, from elisp.pdf, 21.3 "Format of keymaps", the term "full keymap" is already defined:

If an element of a keymap is a char-table, it counts as holding bindings for all
character events with no modifier bit. This is a compact way to record lots of
bindings. A keymap with such a char-table is called a *full keymap*. Other
keymaps are called sparse keymaps.
